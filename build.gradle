group 'android.com.tronlink-UI-test'
version '1.0-SNAPSHOT'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url 'http://clojars.org/repo' }
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.13.2'
    implementation 'org.apache.commons:commons-lang3:3.7'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.44'
    compile group: 'org.testng', name: 'testng', version: '6.9.9'
    compile group: 'io.appium', name: 'java-client', version: '7.2.0'
    compile group: 'com.google.zxing', name: 'core', version: '3.1.0'
    compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.4.0'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.1'
    compile files('libs/wallet-1.0-SNAPSHOT.jar')
    compile group: 'com.madgag.spongycastle', name: 'core', version: '1.54.0.0'
    compile group: 'com.madgag.spongycastle', name: 'prov', version: '1.58.0.0'
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.26'
}

test {
    useTestNG(){
        suites 'testng.xml'
    }
}

task tronlink(type: Test,dependsOn: 'autoCreateTestngXml') {
    useTestNG {
        suites(file('src/test/resources/tronlink-testng.xml'))
        parallel 'tests'
        threadCount 10
    }
}

task androidP0(type: Test,dependsOn: 'autoCreateAndroidP0Xml') {
    useTestNG {
        suites(file('src/test/resources/android-p0.xml'))
        parallel 'tests'
        threadCount 10
    }
}
task androidP0t(type: Test) {
    useTestNG {
        suites(file('src/test/resources/android-p0.xml'))
        parallel 'tests'
        threadCount 10
    }
}

task autoCreateAndroidP0Xml(type: Test) {
    useTestNG {
        suites(file('src/test/resources/autoCreateAndroidP0Xml.xml'))
        parallel 'tests'
        threadCount 1
    }
}

task tronlinkt(type: Test) {
    useTestNG {
        suites(file('src/test/resources/tronlink-testng.xml'))
        parallel 'tests'
        threadCount 10
    }
}

task iosP0(type: Test,dependsOn: 'autoCreateiOSP0Xml') {
    useTestNG {
        suites(file('src/test/resources/ios-p0.xml'))
        parallel 'tests'
        threadCount 10
    }
}
task ios(type: Test,dependsOn: 'autoCreateIosTestngXml') {
    useTestNG {
        suites(file('src/test/resources/tronlink-ios.xml'))
        parallel 'tests'
        threadCount 10
    }
}
//
task iost(type: Test) {
    useTestNG {
        suites(file('src/test/resources/tronlink-ios.xml'))
        parallel 'tests'
        threadCount 10
    }
}
task autoCreateiOSP0Xml(type: Test) {
    useTestNG {
        suites(file('src/test/resources/autoCreateiOSP0Xml.xml'))
        parallel 'tests'
        threadCount 1
    }
}
task hundredios(type: Test,dependsOn: 'createNumbersWalletsTestngXml') {
    useTestNG {
        suites(file('src/test/resources/tronlink-ios.xml'))
        parallel 'tests'
        threadCount 10
    }
}
task createNumbersWalletsTestngXml(type: Test) {
    useTestNG {
        suites(file('src/test/resources/createNumbersWalletsTestngXml.xml'))
        parallel 'tests'
        threadCount 1
    }
}
task autoCreateTestngXml(type: Test) {
    useTestNG {
        suites(file('src/test/resources/autoCreateTestngXml.xml'))
        parallel 'tests'
        threadCount 1
    }
}

task autoCreateIosTestngXml(type: Test) {
    useTestNG {
        suites(file('src/test/resources/autoCreateIosTestngXml.xml'))
        parallel 'tests'
        threadCount 1
    }
}

task activityServer(type: Test) {
    useTestNG {
        suites(file('src/test/resources/tronlink-activity-server.xml'))
        parallel 'tests'
        threadCount 1
    }
}

task releaseTronlink(type: Test,dependsOn: 'autoCreateTestngXmlForRelease') {
    useTestNG {
        suites(file('src/test/resources/tronlink-testng.xml'))
        parallel 'tests'
        threadCount 10
    }
}

task autoCreateTestngXmlForRelease(type: Test) {
    useTestNG {
        suites(file('src/test/resources/autoCreateTestngForReleaseXml.xml'))
        parallel 'tests'
        threadCount 1
    }
}
